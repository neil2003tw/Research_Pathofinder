0.96^25
library(slidify)
library(devtools)
install_github('slidifyLibraries','ramnathv')
library(slidifyLibraries)
install.packages("rPython", repos = "http://www.datanalytics.com/R")
install.packages("rPython")
?sqrt
21^0.5
1/20
21^0.05
1.21^0.05
1.01^20
6.8*(5^0.5)
6.8/(5^0.5)
dir()
getwd()
grep('.*1024',dir())
dir_list<-dir()
dir_list[grep('.*1024',dir_list]
dir_list[grep('.*1024',dir_list)]
dir_list<-dir_list[grep('.*1024',dir_list)]
dir_list
?apply
HIV<-c(12.0,10.5,13.5,12.5,9.5,6.3,7.2)
mean(HIV)
median(H)
median(HIV)
sd(HIV)
read.table('../../Dropbox/NTU HW/Data Mining/D')
read.table('../../Dropbox/NTU HW/Data Mining/Homework3- libSVM/DM-HW3/income',sep=',')
income<-read.table('../../Dropbox/NTU HW/Data Mining/Homework3- libSVM/DM-HW3/income',sep=',')
str(income)
class(income$V15)
levels(income$V2)
levels(income[,2])
class(income[,2])
apply(income,2,function(x) class(x))
apply(income,2,function(x) class(get(x)))
apply(income,2,function(x) class(x))
lapply(income,function(x) class(x))
lapply(income,class)
lapply(income,function(x) if(class(x)=='factor){print(names(x))})
)
)
)
)
lapply(income,function(x) if(class(x)=='factor'){print(names(x))} )
lapply(income,function(x) if(class(x)=='factor'){print(colnames(x))} )
sapply(income,class)
sapply(income,class)=='factor'
head(income[,sapply(income,class)=='factor'])
str(income)
levels(income$V14)
levels(income$V15)
levels(income$V15)<-c('<=50K','<=50K','>50K','>50K')
levels(income$V15)
head(as.numeric(income[,sapply(income,class)=='factor']))
as.numeric(income[,sapply(income,class)=='factor'])
for(i in sapply(income,class)=='factor']){}
for(i in sapply(income,class)=='factor'){print(i)}
sapply(income,class)=='factor')
sapply(income,class)=='factor'
if(sapply(income,class)=='factor')
{print('dick')}
as.numeric(income[,sapply(income,class)=='factor'])
lapply(income[,sapply(income,class)=='factor'],as.numeric)
income[,sapply(income,class)=='factor']<-lapply(income[,sapply(income,class)=='factor'],as.numeric)
head(income)
a<-\
a<-/
a<- /
a<-
b
str(income)
factor(income$V15)
for(i in seq(1,length(income)))
{}
length(income)
paste0('1:',income[,1])
for(i in seq(1,length(income))){
income[,i]<-paste0(i,':',income[,i])
}
head(income)
write.table(income,'income_sorted',sep=' ',quote = F)
write.table(income,'income_sorted',sep=' ',quote = F,col.names = F)
library(qvalue)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
train<-createDataPartition(segmentationOriginal,p=0.6)
head(segmentationOriginal)
train<-createDataPartition(segmentationOriginal$Class,p=0.6)
head(train)
train<-createDataPartition(segmentationOriginal$Class,p=0.6,list = F)
head(train)
trainset<-segmentationOriginal[train,]
testset<-segmentationOriginal[-train,]
fit<-train(Class~.,mathod='rcart',data=trainset)
test<-data.frame(TotalIntench2=c(23000,50000,57000,0),FiberWidthCh1=c(10,10,8,8),VarIntenCh4=c(0,100,100,100),PerimStatusCh1=c(2,0,0,2))
predict(fit,test)
fit
predict(fit,newdata = test)
print(fit$finalModel)
fit<-train(Class~.,mathod='rpart',data=trainset)
print(fit$finalModel)
str(fit)
library(rattle)
fancyRpartPlot(fit$finalModel)
predict(fit,newdata = testset)
print(fit$finalModel)
fit<-train(Class~.,method='rpart',data=trainset)
print(fit$finalModel)
fancyRpartPlot(fit$finalModel)
predict(fit,newdata = test)
citation("limma")
library(caret)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
install.packages(ElemStatLearn)
install.packages('ElemStatLearn')
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
fit<-train
library(caret)
fit<-train(y~.,data = vowel.train)
predict(fit,vowel.test)
confusionMatrix(predict(fit,vowel.test),vowel.test$y)
confusionMatrix(predict(fit,vowel.test),vowel.test$y)
length(vowel.test)
dim(vowel.test)
vowel.test$y
predicts<-predict(fit,vowel.test)
confusionMatrix(predicts,vowel.test$y)
ll
vowel.train$y<-factor(vowel.train$y)
fit<-train(y~.,data = vowel.train)
predicts<-predict(fit,vowel.test)
confusionMatrix(predicts,vowel.test$y)
vowel.test$y<-factor(vowel.test$y)
set.seed(33833)
fit<-train(y~.,data = vowel.train)
predicts<-predict(fit,vowel.test)
confusionMatrix(predicts,vowel.test$y)
library(AppliedPredictiveModeling)
data(concrete)
?concrete
getwd()
read.table('/Users/NeilWu/Desktop/GSE31827de')
temp<-read.table('/Users/NeilWu/Desktop/GSE31827de')
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf')
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='/t')
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='\t')
ref<-read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='\t')
head(ref)
ref<-read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep=';')
ref<-read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep=';',fill=T)
head(ref)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='NONO',fill=T)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='NO',fill=T)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep='*',fill=T)
read.table('/Users/NeilWu/Desktop/Mus_musculus.GRCm38.78.gtf',sep=' ',fill=T)
head(ref)
sapply(head(ref),function(x) grepl(x,'gene_id'))
sapply(head(ref,4),function(x) grepl(x,'gene_id'))
sapply(head(ref,4),function(x) grepl('.*gene_id.*',x))
sapply(head(ref,4),function(x) x[grepl('.*gene_id.*',x)])
sapply(head(ref,4),function(x) x[grepl('.*gene_id.*',as.character(x))])
sapply(head(ref,4),function(x) grepl('.*gene_id.*',as.character(x)))
t<-sapply(head(ref,4),function(x) grepl('.*gene_id.*',as.character(x)))
head(ref,4)
head(ref,4)[t]
gene_id<-sapply(ref,function(x) grepl('.*gene_id.*',as.character(x)))
gene_name<-sapply(ref,function(x) grepl('.*gene_name.*',as.character(x)))
head(ref[gene_id])
head(ref[gene_name])
data.frame(gene_id=ref[gene_id],gene_name=ref[gene_name])
data<-data.frame(gene_id=ref[gene_id],gene_name=ref[gene_name])
head(data)
temp_id<-strsplit(ref[gene_id],' ')
head(temp_id)
temp_name<-strsplit(ref[gene_name],' ')
sapply(head(temp_id)),[2])
sapply(head(temp_id)),[[2])
sapply(head(temp_id)),[[2)
sapply(head(temp_id)),[[)
sapply(head(temp_id),[2])
sapply(head(temp_id),[2)
sapply(head(temp_id),[[])
sapply(head(temp_id),function(x) x[2])
temp_id_done<-sapply(temp_id,function(x) x[2])
temp_name_done<-sapply(temp_name,function(x) x[2])
head(temp_id_done)
head(temp_name_done)
temp_name<-strsplit(ref[gene_name],' ')
head(temp_name)
temp_name_done<-sapply(temp_name,function(x) x[3])
data<-data.frame(gene_id=temp_id_done,gene_name=temp_name_done)
head(data)
write.csv(data,'/Users/NeilWu/Desktop/Mouse_id_name.csv')
clear(gene_id)
clean(gene_id)
rm(gene_id)
rm(gene_name)
head(temp)
head(temp,20)
strsplit(temp,'_at')
strsplit(temp[1],'_at')
as.character(temp)
temp[1]
read.csv('/Users/NeilWu/Desktop/GSE31827de')
read.csv('/Users/NeilWu/Desktop/GSE31827de',sep=' ')
temp<-read.csv('/Users/NeilWu/Desktop/GSE31827de',sep=' ')
head(temp)
sapply(temp,function(x) strsplit(x,'_')[1])
sapply(temp,function(x) strsplit(x,'\_')[1])
sapply(temp,function(x) strsplit(x,'_at')[1])
temp<-read.csv('/Users/NeilWu/Desktop/GSE31827de',sep=' ',stringasfactor=F)
sapply(temp,function(x) strsplit(as.character(x),'_at')[1])
sapply(temp,function(x) strsplit(as.character(x),'_at'))
temp2<-sapply(temp,function(x) strsplit(as.character(x),'_at'))
head(temp2)
data.frame(temp2)
temp<-data.frame(temp2)
head(temp)
head(data)
merge(x=temp,y = data,by.x ='x',by.y='gene_id')
merge(x=temp,y = data,by.x =x,by.y=gene_id)
merge(x=temp,y = data,by.x ='x',by.y='gene_id')
typeof(data)
typeof(temp)
str(data)
str(temp)
temp$x
head(temp)
unlist(temp$x)
temp<-unlist(temp$x)
temp<-data.frame(temp)
str(temp)
merge(x=temp,y = data,by.x ='x',by.y='gene_id')
head(temp)
merge(x=temp,y = data,by.x ='temp',by.y='gene_id')
merged<-merge(x=temp,y = data,by.x ='temp',by.y='gene_id')
head(merged)
head(merged,10)
head(temp)
head(data)
length(data)
length(data$gene_id)
data[data$gene_id == 'ENSMUSG00000000154',]
duplicated(data)
sum(duplicated(data))
data[duplicated(data)]
data[duplicated(data),]
head(data[duplicated(data),])
head(data[duplicated(data),],40)
head(data[duplicated(data),],80)
data<-data[!duplicated(data),]
merged<-merge(x=temp,y = data,by.x ='temp',by.y='gene_id')
head(merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de.csv',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de.csv',merged)
write.csv('/Users/NeilWu/Desktop/GSE31827de.csv',merged)
FN2<-read.csv('/Users/NeilWu/Dropbox/2-fold change (L12 over CTN).xls')
head(FN2)
library(xlsx)
??read.xls
library(gdata)
read.xls('/Users/NeilWu/Dropbox/2-fold change (L12 over CTN).xls')
FN2<-read.xls('/Users/NeilWu/Dropbox/2-fold change (L12 over CTN).xls')
head(FN2)
FN2_gn<-FN2$gene_name
head(FN2_gn)
head(temp2)
head(merged)
match(tolower(merged$gene_name),tolower(as.character(FN2_gn)))
!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))
match(tolower(merged$gene_name),tolower(as.character(FN2_gn)))
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt')
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt',row.names=F,quote=F)
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt',row.names=F,quote=F,colnames=F)
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match.txt',row.names=F,quote=F,col.names=F)
FN2<-read.xls('/Users/NeilWu/Dropbox/2-fold change (M4 over CTN).xls')
head(FN2)
FN2_gn<-FN2$gene_name
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
head(FN2_found)
length(FN2_found)
write.table(FN2_found,'/Users/NeilWu/Desktop/M4_over_match.txt',row.names=F,quote=F,col.names=F)
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt')
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt',fill=T)
head(FN2)
FN2<-read.csv('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt',fill=T)
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (L12 over CTN).txt',fill=T,header=T)
head(FN2)
FN2_gn<-FN2$gene_name
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
haed(FN2_found)
head(FN2_found)
length(FN2_found)
write.table(FN2_found,'/Users/NeilWu/Desktop/L12_over_match_fold8.txt',row.names=F,quote=F,col.names=F)
FN2<-read.table('/Users/NeilWu/Dropbox/8-fold change (M4 over CTN).txt',fill=T,header=T)
FN2_gn<-FN2$gene_name
FN2_found<-merged$gene_name[!is.na(match(tolower(merged$gene_name),tolower(as.character(FN2_gn))))]
write.table(FN2_found,'/Users/NeilWu/Desktop/M4_over_match_fold8.txt',row.names=F,quote=F,col.names=F)
?suppressPackageStartupMessages
suppressPackageStartupMessages
t<-c('a','a','b','c')
grepl('a',t)
grep('a',t)
t[grep('a',t)]
datafilename="http://personality-project.org/r/datasets/R.appendix1.data"
> data.ex1=read.table(datafilename,header=T)
data.ex1=read.table(datafilename,header=T)
head(data.ex1)
str(data.ex1)
data.ex1
barplot(data.ex1$Alertness)
?t
rand(1,13)
randn(1,13)
?perm
??perm
?sample
sample(seq(1,13),13)
source("http://bioconductor.org/biocLite.R")
biocLite("EDDA")
library(EDDA)
data <- generateData(EntityCount=500)
?testDATs
data
?ROCR
??ROCE
??ROCR
ROCR.hiv
getwd()
library(ggplot2)
rm(list=ls())
t1_14<-read.table('table1_14')
head(t1_14)
str(t1_14)
ggplot(t1_14,aes(x=Replicate_count))+geom_line(aes(y=Specificity,colour=DEtools))
ggplot(t1_14,aes(x=Replicate_count))+geom_line(aes(y=Sensitivity,colour=DEtools))
t1_9<-read.table('table1_9')
ggplot(t1_9,aes(x=Replicate_count))+geom_line(aes(y=Sensitivity,colour=DEtools))
ggplot(t1_9,aes(x=Replicate_count))+geom_line(aes(y=Specificity,colour=DEtools))
ggplot(t1_9,aes(x=Replicate_count))+geom_bar(aes(y=time,colour=DEtools))
ggplot(t1_9,aes(x=Replicate_count))+geom_bar(aes(y=time,colour=DEtools),stat='identity')
ggplot(t1_9,aes(x=Replicate_count))+geom_bar(aes(y=time,fill=DEtools),stat='identity')
ggplot(t1_9,aes(x=Replicate_count))+geom_bar(aes(y=time,fill=DEtools),stat='identity',position='dodge')
ggplot(t1_9,aes(x=factor(Replicate_count)))+geom_bar(aes(y=time,fill=DEtools),position='dodge')
ggplot(t1_9,aes(x=factor(Replicate_count)))+geom_bar(aes(y=time,fill=DEtools),stat='identity',position='dodge')
ggplot(t1_9,aes(x=factor(Replicate_count)))+geom_bar(aes(y=time,fill=DEtools),stat='identity',position='dodge')+xlab('Replicate_count')+ylab('Time (seconds)')
ggplot(t1_14,aes(x=factor(Replicate_count)))+geom_bar(aes(y=time,fill=DEtools),stat='identity',position='dodge')+xlab('Replicate_count')+ylab('Time (seconds)')
ggplot(t1_9,aes(x=factor(Replicate_count)))+geom_bar(aes(y=time,fill=DEtools),stat='identity',position='dodge')+xlab('Replicate_count')+ylab('Time (seconds)')
result<-read.table('../../result1')
result<-read.table('../../result1',sep='\t')
result<-read.table('../../result1',sep='\t')
result<-read.table('../../result1',sep='\t',quote=NULL)
head(result)
grep('homo sapiens',result$V4)
grep('homo sapiens',result$V4,ignore.case = T)
sum(grep('homo sapiens',result$V4,ignore.case = T))
sum(grepl('homo sapiens',result$V4,ignore.case = T))
sum(grepl('virus',result$V4,ignore.case = T))
result_hg<-result[grepl('virus',result$V4,ignore.case = T),]
result_hg<-result[grepl('homo sapiens',result$V4,ignore.case = T),]
result[grepl('virus',result$V4,ignore.case = T),]
result_nh<-result[-grepl('homo sapiens',result$V4,ignore.case = T),]
result_nh<-result[!grepl('homo sapiens',result$V4,ignore.case = T),]
result_nh
grep('human',result_nh$V4,ignore.case = T)
grep('hepatitis',result$V4,ignore.case = T)
result[grepl('virus',result$V4,ignore.case = T),]
result<-read.table('../../result2',sep='\t',quote=NULL)
grepl('homo sapiens',result$V4,ignore.case = T)
sum(grepl('homo sapiens',result$V4,ignore.case = T) || grepl('human',result$V4,ignore.case = T))
sum(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T))
sum(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T))
result_nh<-result[grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T),]
result_hg<-result[grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T),]
result_nh<-result[!grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T),]
result_nh<-result[!(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T)),]
sum(grepl('predict',result_nh,ignore.case = T))
sum(grepl('predict',result_nh$V4,ignore.case = T))
result_nh[!grepl('predict',result_nh$V4,ignore.case = T),]
result_nh<-result[!(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T) | grepl('Pan troglodytes',result$V4,ignore.case = T)),]
result_hg<-result[(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('gorilla',result$V4,ignore.case = T) | grepl('Pan troglodytes',result$V4,ignore.case = T)),]
result_nh$V4
grepl('predict',result_nh$V4,ignore.case = T)
result_nh[grepl('predict',result_nh$V4,ignore.case = T),]
result_nh[!grepl('predict',result_nh$V4,ignore.case = T),]
result_nh[!grepl('predict',result_nh$V4,ignore.case = T),4]
hist(result$V1)
result_nhnp<-result_nh[!grepl('predict',result_nh$V4,ignore.case = T),4]
result_nhnp<-result_nh[!grepl('predict',result_nh$V4,ignore.case = T),]
result_nhnp<-result_nhnp[result_nhnp$V1!=0,]
result_nhnp<-result_nhnp[!grepl('Pan paniscu',result_nhnp$V4,ignore.case = T),]
result_nhnp<-result_nhnp[!grepl('Pongo abelii',result_nhnp$V4,ignore.case = T),]
result_nhnp
result_nhnp$V4
result_nhnp$V4<-as.character(result_nhnp$V4)
result_nhnp$V4
result_nhnp<-result_nhnp[!grepl('h.sapiens',result_nhnp$V4,ignore.case = T),]
result_nhnp$V4
result_nhnp
result[which.max(result$V1),]
order(result$V1)
head(result[order(result$V1),1]
)
head(result[order(result$V1,decreasing = T),1])
head(result[order(result$V1,decreasing = T),])
head(result[order(result$V1,decreasing = T),],n = 10)
result_n_all<-result_nhnp
result_nhnp<-result_nh[!grepl('predict',result_nh$V4,ignore.case = T),]
result_hg<-result[(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('h.sapiens',result$V4,ignore.case = T) | grepl('h. sapiens',result$V4,ignore.case = T) ,]
result_hg<-result[(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('h.sapiens',result$V4,ignore.case = T) | grepl('h. sapiens',result$V4,ignore.case = T),]
result_hg<-result[(grepl('homo sapiens',result$V4,ignore.case = T) | grepl('human',result$V4,ignore.case = T) | grepl('h.sapiens',result$V4,ignore.case = T) | grepl('h. sapiens',result$V4,ignore.case = T)),]
library(ggplot2)
ratio<-c(1875,2777-1875-150-16,150,16)
?pie
pie(ratio)
names(ratio)
names(ratio)<-c('Human','Apes','"Predicted"','Others')
names(ratio)
pie(ratio)
percentratio<-ratio/sum(ratio)
percentratio
percentratio<-(ratio/sum(ratio))*100
percentratio<-round((ratio/sum(ratio))*100,1)
percentratio
pie(ratio,labels = percentratio,main='Result of Blast (contigs)')
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',cols=cols)
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',cols=rainbow)
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',cols=rainbow(4))
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',cols=rainbow(7))
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',cols=c('white','lightblue','lightgreen','red'))
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',col=c('white','lightblue','lightgreen','red'))
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',col=c('white','lightblue','lightgreen','red'))
pie(ratio,labels = percentratio,main='Result of Blast (contigs)',col=c('lightyellow','lightblue','lightgreen','red'))
legend("topright", names(ratio), cex=0.8, fill=c('lightyellow','lightblue','lightgreen','red'))
legend("topright", paste0(names(ratio),'%'), cex=0.8, fill=c('lightyellow','lightblue','lightgreen','red'))
pie(ratio,labels = paste0(percentratio,'%'), main='Result of Blast (contigs)',col=c('lightyellow','lightblue','lightgreen','red'))
legend("topright", names(ratio), cex=0.8, fill=c('lightyellow','lightblue','lightgreen','red'))
ggplot(result,aes(x=V1))+geom_density()
ggplot(result,aes(x=V1))+geom_density()+xlab('Length (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1))+geom_density()+xlab('Score (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1,fill))+geom_density()+xlab('Score (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1,fill=red))+geom_density()+xlab('Score (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1))+geom_density(fill=blue)+xlab('Score (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1))+geom_density(fill='blue')+xlab('Score (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1))+geom_density(fill='blue',alpha=.2)+xlab('Score (contig)')+geom_vline(x=max(result_n_all$V1))
ggplot(result,aes(x=V1))+geom_dotplot()
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=.2)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=20)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=100)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10,col=red)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10,col='red')
max(result_n_all$V1
)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow())
library(grid)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow())
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow(),size=1)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow(),size=1)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow(),size=4)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow(),size=0.1)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow(),size=0.2)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1860,y=0.12,yend=0.01,arrow=arrow(type = 'closed'),size=0.2)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1870,y=0.12,yend=0.02,arrow=arrow(type = 'closed'),size=0.2)
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1870,y=0.12,yend=0.02,arrow=arrow(type = 'closed'),size=0.2)+xlab('Blast score')+ylab('Density')
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1870,y=0.12,yend=0.02,arrow=arrow(type = 'closed'),size=0.2)+xlab('Blast score')+ylab('Density')+annotate('text',x=2010,y=0.13,label='HBV')
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1870,y=0.12,yend=0.02,arrow=arrow(type = 'closed'),size=0.2)+xlab('Blast score')+ylab('Density')+annotate('text',x=2100,y=0.15,label='HBV')
View(result_n_all)
pie(ratio,labels = paste0(percentratio,'%'), main='Result of Blast (contigs)',col=c('lightyellow','lightblue','lightgreen','red'))
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1870,y=0.12,yend=0.02,arrow=arrow(type = 'closed'),size=0.2)+xlab('Blast score')+ylab('Density')+annotate('text',x=2100,y=0.15,label='HBV')
ggplot(result,aes(x=V1))+geom_dotplot(binwidth=10)+annotate('segment',x=2000,xend=1870,y=0.12,yend=0.02,arrow=arrow(type = 'closed'),size=0.2)+xlab('Blast score')+ylab('Density')+annotate('text',x=2100,y=0.15,label='HBV')+ggtitle('Score density plot')
ratio
result_nhnp
View(result_nhnp)
View(result_nh)
pie(ratio,labels = paste0(percentratio,'%'), main='Result of Blast (contigs)',col=c('lightyellow','lightblue','lightgreen','red'))
ratio
setwd('../../Desktop/Pathogen/code')
temp<-read.table('../result_Hep_out.txt',stringsAsFactors = F,fill=T,sep='\t')
temp<-read.table('../result_Hep_out.txt',stringsAsFactors = F,fill=T,sep='\t')
temp_ordered<-temp[order(temp[,1],decreasing = T),]
split_grep<-function(x){
line<-strsplit(x,split=' ')
line<-line[[1]]
final<-grep('^[A-Z][a-z]+',line,value = T)
if(any(c('Homo','Human','Sapiens') %in% final)){
final<-'Homo'
}
if(any(c('Pongo','Pan') %in% final)){
final<-'Homo'
}
return(final)
}
trial<-sapply(temp_ordered[,4],split_grep,USE.NAMES = F)
temp_ordered[,4]<-sapply(trial,function(x) x[1])
temp_ordered[,4]<-factor(temp_ordered[,4])
levels(temp_ordered[,4])[21]<-'Others'
temp_sub<-temp_ordered[temp_ordered[,4]!='Homo',]
levels(temp_sub[,4])
